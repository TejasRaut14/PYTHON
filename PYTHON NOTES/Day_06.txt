Tuple in python:  1]ordered data type 
                  2]denoted with ()
				  3]Immutable type 
				  4]use where we can declare constant values 
				  5] Iterating through tuple is faster than list
				  
				  
		Create tuple with :
		                     t=(55,66,77,55)
							 a=t[2]
							 print(a)
							 output--77

Function used in Tuple:

    1]min()--m=t.min()
	2]max()--n=t.max()
	3]count()--c=t.count(10)--count of 10 in the tuple is print 
	4]index()--i=t.index(40)--index number of 40 is print 
	5]sum()--s=sum(t)--sum of interger and float in the tuple
	
Sets:   1]Unorderd data
        2]Unindex
		3]{}
		4]set() function 


Set function:
    
	1]set()--
	
	l=[10,20,30]
	s=set(l)
	print(s)
	
	output--{10,20,30}
	
	2]add()--add new elemets--s={10,20,3,04}
	                            s.add(55)
								print(s)
								
								
	3]pop()--s.pop()
	
	4]remove()--s.remove(20)
	5]clear()--s.clear()--output--set()
	6]discard()--s.discard(30)
	7]update()--s.update(l)


User defined Function:

     1]simple function--
	 2]function with arguments--
	 3]return type function--
	 
	 file name--fun.py
	def simplefunction():
	    print("welcome to our home')
		
		
	call function:--simplefunction()
	output--welcome to our home
	
	Argument:
	
	def sumdata(a,b) 
	
	return function when we call  
	
	return c ; at last we call return function value 
	
1]def showdata():
    print("welcome to home ")

showdata()
showdata()
showdata()

2]def sum(a,b):
    print(a+b)

sum(30,50)

sum(40,50

3]def sum(a,b=2):
    print(a+b)

sum(20)

4]def square(x):
    return x*x
s=square(5)
print(s)






	
	
	
	
	